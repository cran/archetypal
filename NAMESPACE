exportPattern("^[[:alpha:]]+")
S3method(print,archetypal)
S3method(summary,archetypal)
S3method(plot,archetypal)
S3method(plot,study_AAconvergence)
S3method(plot,kappa_tools)
import(parallel)
import(doParallel)
importFrom("utils", "combn", "head")
import(Matrix)
importFrom("geometry","convhulln")
importFrom("inflection", "ede", "uik", "d2uik", "check_curve")
importFrom("lpSolve", "lp.assign")
importFrom("grDevices", "chull", "dev.off", "pdf", "rgb")
importFrom("graphics", "abline", "axis", "grid", "plot", "text", "layout", "legend", "lines", "par", "points", "polygon", "segments", "mtext")
importFrom("methods", "as")
importFrom("stats", "aggregate", "dist", "runif", "rexp", "lowess", "coefficients", "lm",  "coef", "predict", "ecdf", "knots", "var")
importFrom("plot3D", "scatter3D", "text3D", "lines3D", "polygon3D")  
importFrom("entropy", "discretize", "entropy")
export(align_archetypes_from_list)
export(archetypal)
export(check_Bmatrix)
export(dirichlet_sample)
export(find_closer_points)
export(find_furthestsum_points)
export(find_optimal_kappas)
export(find_outmost_convexhull_points)
export(find_outmost_partitioned_convexhull_points)
export(find_outmost_points)
export(find_outmost_projected_convexhull_points)
export(find_pcha_optimal_parameters)
export(FurthestSum)
export(grouped_resample)
export(study_AAconvergence)
export(plot_archs)
export(kappa_tools)